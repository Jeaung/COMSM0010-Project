AWSTemplateFormatVersion: '2010-09-09'
Description: 'BeFree

  '
Globals:
  Function:
    Timeout: 3
Resources:
  BackingLambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :table/
                - Ref: MatchTable
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: BaseLambdaPolicy
    Type: AWS::IAM::Role
  BefreeApi:
    Properties:
      Auth:
        Authorizers:
          BefreeAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - BefreeUserPool
              - Arn
        DefaultAuthorizer: BefreeAuthorizer
      Cors: '''*'''
      StageName: prod
    Type: AWS::Serverless::Api
  BefreeUserPool:
    Properties:
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      Schema:
      - AttributeDataType: String
        Name: email
        Required: true
      UserPoolName: befree
    Type: AWS::Cognito::UserPool
  BefreeUserPoolClient:
    Properties:
      ClientName: befree
      GenerateSecret: false
      UserPoolId:
        Ref: BefreeUserPool
    Type: AWS::Cognito::UserPoolClient
  BetFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Events:
        Bet:
          Properties:
            Method: post
            Path: /bet
            RestApiId:
              Ref: BefreeApi
          Type: Api
      Handler: app.betHandler
      Role:
        Fn::GetAtt:
        - BackingLambdaExecutionRole
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  CommentFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Events:
        Comment:
          Properties:
            Method: post
            Path: /comment
            RestApiId:
              Ref: BefreeApi
          Type: Api
      Handler: app.commentHandler
      Role:
        Fn::GetAtt:
        - BackingLambdaExecutionRole
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  CommentsTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: MatchId
        AttributeType: N
      KeySchema:
      - AttributeName: MatchId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Comment
    Type: AWS::DynamoDB::Table
  CrawlerFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Handler: crawler.accountingHandler
      Role:
        Fn::GetAtt:
        - BackingLambdaExecutionRole
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  GetMatchesFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Events:
        GetMatches:
          Properties:
            Auth:
              Authorizer: NONE
            Method: get
            Path: /matches
            RestApiId:
              Ref: BefreeApi
          Type: Api
      Handler: app.getMatchesHandler
      Runtime: nodejs8.10
    Role:
      Fn::GetAtt:
      - BackingLambdaExecutionRole
      - Arn
    Type: AWS::Serverless::Function
  LikeFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Events:
        Like:
          Properties:
            Method: post
            Path: /like
            RestApiId:
              Ref: BefreeApi
          Type: Api
      Handler: app.likeHandler
      Role:
        Fn::GetAtt:
        - BackingLambdaExecutionRole
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  MatchDetailFunction:
    Properties:
      CodeUri: s3://befree-bruce-jeaung-pre/18446d9f81ec202361c50cd3886f20f3
      Events:
        MatchDetail:
          Properties:
            Auth:
              Authorizer: NONE
            Method: get
            Path: /match
            RestApiId:
              Ref: BefreeApi
          Type: Api
      Handler: app.matchDetailHandler
      Role:
        Fn::GetAtt:
        - BackingLambdaExecutionRole
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  MatchTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: Id
        AttributeType: N
      KeySchema:
      - AttributeName: Id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Match
    Type: AWS::DynamoDB::Table
  PermissionForSchedulingCrawler:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: CrawlerFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - ScheduledRule
        - Arn
    Type: AWS::Lambda::Permission
  ScheduledRule:
    Properties:
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - CrawlerFunction
          - Arn
        Id: AccountingScheduler
    Type: AWS::Events::Rule
Transform: AWS::Serverless-2016-10-31
